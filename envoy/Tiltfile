# Ref - https://docs.tilt.dev/tiltfile_authoring
# https://docs.tilt.dev/api.html#functions

# "import" extensions
load("ext://configmap", "configmap_create")
load("ext://helm_resource", "helm_resource", "helm_repo")
# https://github.com/tilt-dev/tilt-extensions/tree/master/helm_remote
load('ext://helm_remote', 'helm_remote')
# https://blog.tilt.dev/2021/06/30/namespace-flag.html
load("ext://namespace", "namespace_create", "namespace_inject")

# https://docs.tilt.dev/api.html#api.k8s_namespace
if k8s_namespace() == 'default':
  fail("failing early to avoid deploying to 'default' namespace")

if k8s_context() == 'prod':
  fail("failing early to avoid overwriting prod")

# https://blog.tilt.dev/2021/06/30/namespace-flag.html
# https://github.com/tilt-dev/tilt-extensions/tree/master/namespace
namespace_create(name="playground")

# https://github.com/stakater/Reloader
# A Kubernetes controller to watch changes in ConfigMap and Secrets and do rolling
# upgrades on Pods with their associated Deployment, StatefulSet, DaemonSet and DeploymentConfig
#
# https://github.com/tilt-dev/tilt-extensions/blob/master/helm_resource/README.md#helm_repo
# Installs the helm repo on "tilt up"
helm_repo(name="stakater", url="https://stakater.github.io/stakater-charts")
# https://github.com/tilt-dev/tilt-extensions/tree/master/helm_resource
helm_resource(name="reloader", chart="stakater/reloader", namespace="default")
k8s_resource("reloader", resource_deps=["stakater"])

# Envoy
k8s_yaml("k8s/envoy.yaml")
k8s_resource("envoy", port_forwards=[9901, 10000], auto_init=True)
configmap_create(name="envoy-config", from_file=["minimal-envoy-config.yaml=./minimal-envoy-config.yaml"], watch=True)

# Envoy Gateway
# https://gateway.envoyproxy.io/docs/tasks/quickstart/#installation
# https://gateway.envoyproxy.io/docs/install/install-helm/
#
# Cant use helm_repo for OCI artifacts
# https://github.com/tilt-dev/tilt-extensions/tree/master/helm_remote
# equivalent to 'helm repo add'
#
# Pull - 'helm pull oci://docker.io/envoyproxy/gateway-helm --version v1.4.1 --untar --untardir ./charts' to get the default values file
# Runs - 'helm template gateway-helm /home/mccurdyc/.local/share/tilt-dev/.helm/oci/docker.io/envoyproxy/v1.4.1/gateway-helm --namespace envoy-gateway-system --include-crds --values ./envoy-gateway.yaml'
#
# https://docs.tilt.dev/api.html#api.helm
# https://docs.tilt.dev/helm.html
# https://gateway.envoyproxy.io/docs/install/install-helm/
# Ports - https://gateway.envoyproxy.io/docs/install/install-helm/#open-ports
# https://gateway.envoyproxy.io/docs/troubleshooting/envoy-proxy-admin-interface/
# - Admin - 0.0.0.0:19000
# - XDS - 0.0.0.0:18000
helm_remote('gateway-helm',
  repo_name='oci://docker.io/envoyproxy',
  version='v1.4.1',
  namespace='envoy-gateway-system',
  values='./envoy-gateway.yaml'
  # set=''
)

# Waits for Envoy Gateway to be ready
# https://docs.tilt.dev/api.html#api.local_resource
local_resource(name="wait-envoy-gateway", cmd='kubectl wait --timeout=5m -n envoy-gateway-system deployment/envoy-gateway --for=condition=Available', resource_deps=['envoy-gateway'])

# Enable subsets of resources; defaults to "base envoy" in the Justfile
#
# https://docs.tilt.dev/tiltfile_config.html#run-a-defined-set-of-services
# https://docs.tilt.dev/tiltfile_config.html#grouping-services-in-web-ui
config.define_string_list("to-run", args=True)
cfg = config.parse()

groups = {
  "base": ["reloader"],
  "envoy": ["envoy"],
  "gateway": [
    "envoy", 
    "envoy-gateway",
    "wait-envoy-gateway"
  ],
}

resources = []
for arg in cfg.get("to-run", []):
  if arg in groups:
    resources += groups[arg]
  else:
    # also support specifying individual services instead of groups, e.g. `tilt up a b d`
    resources.append(arg)

config.set_enabled_resources(resources)
