#!/usr/bin/env -S just --justfile
# ^ A shebang isn't required, but allows a justfile to be executed
#   like a script, with `./justfile test`, for example.
#
# Just Manual - https://just.systems/man/en/
# https://just.systems/man/en/working-directory.html
# Settings - https://just.systems/man/en/settings.html
# https://just.systems/man/en/settings.html#bash

set shell := ["/usr/bin/env", "bash", "-uc"]

shell := "/usr/bin/env bash"
log := "warn"
export JUST_LOG := log

set quiet := true

import './prometheus/Justfile'

# Inititalize the k3d cluster if it does not already exist
k3d-init:
    k3d cluster get k3s-default || k3d cluster create --config k3d-config.yaml

# Stop the k3d cluster
k3d-stop: tilt-down
    k3d cluster stop k3s-default

# Resume the k3d cluster
k3d-start: k3d-init
    k3d cluster get k3s-default || k3d cluster start k3s-default

# Delete the k3d cluster
k3d-delete: tilt-down
    k3d cluster delete k3s-default

# Starts Tilt
[no-quiet]
tilt-up args="base envoy gateway": k3d-start
    tilt </dev/null >/dev/null --host 0.0.0.0 up --namespace=playground --context=k3d-k3s-default {{ args }} &

# Tears Tilt down
[no-quiet]
tilt-down:
    tilt down --namespace=playground && pkill tilt

port-forward-gateway ports:
    #!{{ shell }}
      d="$(kubectl get deploy \
        -n envoy-gateway-system \
        --selector=gateway.envoyproxy.io/owning-gateway-name=eg \
        -o jsonpath='{.items[0].metadata.name}')"

      kubectl port-forward "deploy/${d}" -n envoy-gateway-system --address 0.0.0.0 {{ ports }}
